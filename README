Fireflies is an experiment I built to learn some basic AI around emergent patterns. 

The basic premise is to simulate a swarm of fireflies dancing around a grid with 
each starting at a random point within their lit/unlit cycles. A given dot will
observe the state of it's neighbors to determine if a majority are in opposition 
to it's current state. If so, it will incrementally adjust it's own cycle (phase
decay) to wait for the others. The goal is to find an algorithm that let's the 
group emerge into fully synchronized light cycles.

The project is built in Ruby and uses the Gosu graphics library to simulate the 
fireflies visualization.

To invoke: './run' from the Fireflies directory

Bonus features currently supported:

- ESC: Exits program with extreme prejudice
- SPACE: toggles in window basic stats
- D: toggles debug logging and stats dump to stdout
- M: toggles movement of the fireflies on/off
- Left click on dot: highlights one firefly circled in red and circles observed 
  subjects in blue
(hint: use 'M' to freeze the little buggers making it easier to click one)

Janky features:

There are some (hopefully) intuitively named constants near the top of the Fireflies 
class (src/fireflies.rb) that allow you to set things like window size, number of 
fireflies, timing, number of subjects, etc. Someday these may find themselves 
extracted into a slightly more elegant config model. 
